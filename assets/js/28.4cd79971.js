(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{358:function(t,s,a){"use strict";a.r(s);var r=a(3),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("都说这本书好，我倒要去看看")]),t._v(" "),s("h2",{attrs:{id:"第0章-楔子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第0章-楔子"}},[t._v("#")]),t._v(" 第0章 楔子")]),t._v(" "),s("p",[t._v("叫我逐章学习，不要跳着阅读")]),t._v(" "),s("h2",{attrs:{id:"第1章装作自己是个小白"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第1章装作自己是个小白"}},[t._v("#")]),t._v(" 第1章\t装作自己是个小白")]),t._v(" "),s("p",[t._v("介绍了一番MySQL客户端，服务器模式，客户端连接服务器方式。")]),t._v(" "),s("p",[t._v("服务器处理客户端请求，具体步骤和MySQL执行过程一样。"),s("RouterLink",{attrs:{to:"/pages/c7801c/"}},[t._v("MySQL执行流程")])],1),t._v(" "),s("h2",{attrs:{id:"第2章启动选项和系统变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第2章启动选项和系统变量"}},[t._v("#")]),t._v(" 第2章\t启动选项和系统变量")]),t._v(" "),s("p",[t._v("没看")]),t._v(" "),s("h2",{attrs:{id:"第3章字符集和比较规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第3章字符集和比较规则"}},[t._v("#")]),t._v(" 第3章\t字符集和比较规则")]),t._v(" "),s("p",[s("strong",[t._v("字符集")])]),t._v(" "),s("p",[t._v("我们知道，计算机中实际存储的是二进制数据，那它是怎么存储字符串呢？当然是建立字符与二进制数据的映射关系了。")]),t._v(" "),s("ul",[s("li",[t._v("把哪些字符映射成二进制数据")]),t._v(" "),s("li",[t._v("字符映射到二进制数据叫编码，反之叫解码")])]),t._v(" "),s("p",[s("strong",[t._v("比较规则")])]),t._v(" "),s("p",[t._v("不区分大小写，全部转为大写或者小写")]),t._v(" "),s("p",[s("strong",[t._v("MySQL中的字符集")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("utf8mb3")]),t._v(": “阉割”过的utf8，使用1-3字节表示字符；")]),t._v(" "),s("li",[s("strong",[t._v("utf8ub4")]),t._v(": 正宗的utf8，使用1-4字节表示字符。")])]),t._v(" "),s("p",[s("strong",[t._v("MySQL中的比较规则")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("utf8_general_ci")]),t._v(": ci（case insensitive）不区分大小写。")])]),t._v(" "),s("h2",{attrs:{id:"第4章innodb记录存储结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第4章innodb记录存储结构"}},[t._v("#")]),t._v(" 第4章\tInnoDB记录存储结构")]),t._v(" "),s("p",[t._v("页是InnoDB中磁盘和内存交互的基本单位，也是InnoDB管理存储空间的基本单位，默认大小为16KB。也就是说，一次从磁盘中读取内容到内存中是16KB，从内容写到磁盘，也是16KB。")]),t._v(" "),s("p",[s("strong",[t._v("COMPACT行格式（额外信息，真实数据）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("变长字段长度列表")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("NULL值列表")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("记录头信息")]),t._v(" "),s("th",[t._v("列1的值")]),t._v(" "),s("th",[t._v("列2的值")]),t._v(" "),s("th",[t._v("...")]),t._v(" "),s("th",[t._v("列n的值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("记录1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("01 03 04")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("00")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("记录2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("03 04")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("06")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("strong",[t._v("变长字段长度列表")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("列名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("存储内容")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("内容长度（十六进制）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("c1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'aaaa'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0x04")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("c3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'bbb'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0x03")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("c4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'d'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0x01")])])])]),t._v(" "),s("p",[t._v("那么就逆序存储变长字段的长度")]),t._v(" "),s("p",[s("strong",[t._v("NULL值列表")])]),t._v(" "),s("p",[t._v("如果一个表中有9个值允许为NULL的列，则这个记录的NULL值列表部分需要2个字节表示，这个数据中的每一位代表真实数据是否为NULL。")]),t._v(" "),s("p",[t._v("如c3, c4位NULL，则值位0x110  也就是06。")]),t._v(" "),s("h2",{attrs:{id:"第5章-innodb数据页结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第5章-innodb数据页结构"}},[t._v("#")]),t._v(" 第5章 InnoDB数据页结构")]),t._v(" "),s("p",[t._v("页是InnoDB管理存储空间的基本单位，一个页的大小一般是16KB。InnoDB为了不同的目的设计了多种不同类型的页，这里介绍存放记录的页，数据页（索引页）。")]),t._v(" "),s("p",[s("strong",[t._v("InnoDB数据页结构")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("中文名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("占用空间大小")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("简单描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("File Header")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件头部")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("38字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("页的一些通用信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Page Header")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("页面头部")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("56字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据页专有的一些信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Infimum + Supremum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("页面中的最小记录和最大记录")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("26字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("两个虚拟的记录")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("User Records")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("用户记录")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不确定")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用户存储的记录内容")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Free Space")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("空闲空间")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不确定")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("页中尚未使用的空间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Page Directory")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("页目录")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不确定")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("页中某些记录的相对位置")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("File Trailer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件尾部")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("8字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("校验页是否完整")])])])]),t._v(" "),s("p",[s("strong",[t._v("用户记录")])]),t._v(" "),s("p",[t._v("我们自己存储的数据一开始在Free Space部分，随后将这部分划分到User Records中，当Free Space全部用完时，代表这个页使用完了。如果有新的记录插入，就需要去申请新的页了。")]),t._v(" "),s("p",[t._v("上一章的行记录格式中的 记录头信息")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230307204629091.png",alt:"image-20230307204629091"}})]),t._v(" "),s("p",[s("strong",[t._v("记录头信息")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("名称")]),t._v(" "),s("th",[t._v("大小(比特〕")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("预留位 1")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("没有使用")])]),t._v(" "),s("tr",[s("td",[t._v("预留位 2")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("没有使用")])]),t._v(" "),s("tr",[s("td",[t._v("deleted_flag")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("标记该记录是否被删除")])]),t._v(" "),s("tr",[s("td",[t._v("min_rec_flag")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("B+ 树中每层非叶子节点中的 最小的目录项记录都会添加该标记")])]),t._v(" "),s("tr",[s("td",[t._v("n_owned")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v('一个页面中的记录会被分成若干个组,每个组中有一个记录是"带头大哥其余的记录都是"小弟"，"带头大哥"记录的 n_owned值代表该组中所有的记录条数，"小弟"记录的 n_owned 值都为 0')])]),t._v(" "),s("tr",[s("td",[t._v("heap_no")]),t._v(" "),s("td",[t._v("13")]),t._v(" "),s("td",[t._v("表示当前记录在页面堆中的相对位置")])]),t._v(" "),s("tr",[s("td",[t._v("record_type")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("表示当前记录的类型 。0 表示普通记录，1 表示 B+ 树非叶节点的目录项记录 . 2 表示 Infimum 记录 ，3 表示 Supremum 记录")])]),t._v(" "),s("tr",[s("td",[t._v("next record")]),t._v(" "),s("td",[t._v("16")]),t._v(" "),s("td",[t._v("表示下一条记录的相对位置")])])])]),t._v(" "),s("p",[s("strong",[t._v("页目录")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230307205916426.png",alt:"image-20230307205916426"}})]),t._v(" "),s("p",[t._v("要找主键值为x的记录，通过二分法确定该记录所在分组对应的槽，然后找到该槽所在分组中主键值最小的那条记录，然后通过记录的next_record属性遍历该槽所在的组中的各个记录。")]),t._v(" "),s("p",[s("strong",[t._v("页面的头部")])]),t._v(" "),s("p",[t._v("存储数据页中的记录状态信息，比如数据页中已经存储了多少条记录、Free Space在页面中的地址偏移量、页目录中存储了多少个槽等。")]),t._v(" "),s("p",[s("strong",[t._v("文件头部")])]),t._v(" "),s("p",[t._v("存放各种页的信息，比如这个页的编号是多少，上一页下一页是谁。")]),t._v(" "),s("p",[s("strong",[t._v("文件尾部")])]),t._v(" "),s("ul",[s("li",[t._v("前4字节代表页的校验和，验证该页是否完整")]),t._v(" "),s("li",[t._v("后4字节代表页面被最后修改时对应的LSN的后4字节")])]),t._v(" "),s("p",[s("strong",[t._v("总结")])]),t._v(" "),s("p",[t._v("每个记录的头信息中都有一个 next record 属性 ,从而可以 使页 中的 所有记录串联成一个单向链表.")]),t._v(" "),s("p",[t._v("lnnoDB 会把页中的记录划分为若干个组,每个组的最后一个记录的地址偏移量作为一个槽,存放在 Page Directory 中一个槽占用 2 字节.在一个页中根据主键查找记录是非常快的,分为两步.")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("通过 二分法确定该记录所在分 组对应的槽,并找到该糟所在分组中主键值最小的那条记录。")])]),t._v(" "),s("li",[s("p",[t._v("通过记录的 next record 属性遍历该槽所在的组中 的各个记录.每个数据页的 File Header 部分 都有上 一个页和下一个页的编号,所以所有的数据页会组成一个双向链表。")])])]),t._v(" "),s("p",[t._v("在将页从内存刷新到磁盘时 , 为了保证页的完整性 ,"),s("strong",[t._v("页首")]),t._v(" 和 **页尾 **都会存储页中数据的校验和，以及页面最 后修改时对应 的 LSN 值 (页尾只会存 储 LSN 值的后 4 字节) . 如果页首和页尾的校验和以及 LSN 值校验不成功 , 就说明刷新期间出现了问题。")]),t._v(" "),s("h2",{attrs:{id:"第6章-b-树索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第6章-b-树索引"}},[t._v("#")]),t._v(" 第6章 B+树索引")]),t._v(" "),s("p",[t._v("各个数据页可以组成一个双向链表，数据页中每条记录会按照主键值从小到大组成一个单向链表。每个数据页会生成一个页目录，通过页目录二分法找到对应的槽，再去顺序遍历槽对应的分组中的记录。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230308202801686.png",alt:"image-20230308202801686"}})]),t._v(" "),s("p",[t._v("存放页目录的页，复用原来的数据页，所以记录中的记录头信息"),s("strong",[t._v("record_type")]),t._v("，用来标记是用户记录还是目录项。存放页目录的页，中的记录只存放两个值，"),s("strong",[t._v("主键值")]),t._v("与对应的"),s("strong",[t._v("页号")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230308203151282.png",alt:"image-20230308203151282"}})]),t._v(" "),s("p",[s("strong",[t._v("聚簇索引")])]),t._v(" "),s("p",[t._v("使用记录主键值的大小进行记录和页的排序")]),t._v(" "),s("ol",[s("li",[t._v("页内的节点按照主键值大小排成一个单向链表，页内的节点分成若干个组，每组中最大主键值当成一个槽；")]),t._v(" "),s("li",[t._v("存放页目录的页，根据主键值大小排成双向链表；")]),t._v(" "),s("li",[t._v("存放用户记录的页，根据主键值大小排成双向链表；")])]),t._v(" "),s("p",[t._v("B+树的叶子节点存储的是完整的用户记录。")]),t._v(" "),s("p",[s("strong",[t._v("二级索引")])]),t._v(" "),s("p",[t._v("存放页目录的页中的记录只存放多个值，"),s("strong",[t._v("主键值")]),t._v("，"),s("strong",[t._v("索引值")]),t._v("与对应的"),s("strong",[t._v("页号")]),t._v("。叶子节点包含"),s("strong",[t._v("索引值")]),t._v("与"),s("strong",[t._v("主键值")]),t._v("，再生成一颗B+树，但叶子节点不包含完整记录，找到叶子节点对应的主键值，再到主键索引中查找完整记录，需要进行一次"),s("strong",[t._v("回表")]),t._v("操作；")]),t._v(" "),s("p",[s("strong",[t._v("联合索引")])]),t._v(" "),s("p",[t._v("存放页目录的页中的记录只存放多个值，"),s("strong",[t._v("主键值")]),t._v("，"),s("strong",[t._v("n个索引值")]),t._v("与对应的"),s("strong",[t._v("页号")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("MyISAM中的索引，都是二级索引，其它类似")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"第7章-b-树索引的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第7章-b-树索引的应用"}},[t._v("#")]),t._v(" 第7章 B+树索引的应用")]),t._v(" "),s("p",[t._v("​    每个索引都对应一颗B+树。B+树分为好多层，最下边一层是叶子节点，其余是内节点。所有用户记录都存储在B+树的叶子结点，所有目录项记录都存储在内节点。")]),t._v(" "),s("p",[t._v("​\tInnoDB存储引擎会自动为主键简历聚簇索引，聚簇索引的叶子节点包含"),s("strong",[t._v("完整")]),t._v("的用户记录。但是建立的二级索引中的叶子节点只包含主键和索引列，若需要查找到非索引列，则需要拿到主键值，到聚簇索引中再查找一次，简称"),s("strong",[t._v("回表")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("聚簇索引和二级索引示意图")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230322161110750.png",alt:"image-20230322161110750"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230322161145982.png",alt:"image-20230322161145982"}})]),t._v(" "),s("p",[s("strong",[t._v("扫描区间和边界条件分析")])]),t._v(" "),s("p",[s("strong",[t._v("索引在空间和时间上都会“拖后腿”")])]),t._v(" "),s("ul",[s("li",[t._v("空间上的代价")])]),t._v(" "),s("p",[t._v("​\t\t每建立一个索引，都要为它建立一颗B+树。每一颗B+树的每一个节点都是一个数据页（一个节点中包含多条记录，还包含一些其它信息）。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("时间上的代价")]),t._v(" "),s("p",[t._v("因为索引列的值是有序的关系，如果新插入的数据，有可能会造成页面分裂、页面回收、还要维护索引列中的排序关系。")]),t._v(" "),s("p",[t._v("在执行查询语句前，首先要生成一个执行计划。MySQL会分析使用不同索引执行查询所需要的成本，索引越多分析的时间越长。")])])]),t._v(" "),s("p",[s("strong",[t._v("扫描区间和边界分析")])]),t._v(" "),s("p",[t._v("去翻书吧。")]),t._v(" "),s("p",[s("strong",[t._v("更好的创建索引和使用索引")])]),t._v(" "),s("ol",[s("li",[t._v("只为用于搜索、排序或分组的列创建索引")]),t._v(" "),s("li",[t._v("考虑索引列中不重复值的个数")]),t._v(" "),s("li",[t._v("索引列的类型尽量小")]),t._v(" "),s("li",[t._v("为列前缀建立索引，节省空间")]),t._v(" "),s("li",[t._v("索引覆盖，只查询索引列，避免回表")]),t._v(" "),s("li",[t._v("让索引列以列名的形式在搜索条件中单独出现")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" single_table "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" key2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不适用索引，全表扫描")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" single_table "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" key2  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[t._v("新插入记录时主键大小对效率的影响，忽大忽小的插入可能会造成页面分裂")])]),t._v(" "),s("h2",{attrs:{id:"第8章-数据的家"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第8章-数据的家"}},[t._v("#")]),t._v(" 第8章 数据的家")]),t._v(" "),s("p",[t._v("MySQL 服务器程序在启动时会到数据目录中加载数据,运行过程中产生的数据也会被存储到数据目录中系统变量也扭曲表明了数据目录的路径。")]),t._v(" "),s("p",[t._v("每个数据库都对应着数据目录下的一个子目录，该子目录中包含一个名为 db.opt 的文件这个文件包含了该数据库的一些属性，比如该数据库的字符集和比较规则等。")]),t._v(" "),s("p",[t._v("对于InnoDB 存储引擎来说 :")]),t._v(" "),s("ul",[s("li",[t._v('如果使用系统表空间存储表中的数据,那么只会在该表所在数据库对应的子目录下创建一个名为"表名 frm" 的文件,表中的数据会存储在系统表空间对应的文件中；')]),t._v(" "),s("li",[t._v('如果使用独立表空间存储表中的数据，那么会在该表所在数据库对应的子目录下创建一个名为"表名.frm"的文件和一个名为"表名.idb"的文件，表中的数据会存储这个"表名.idb"文件中。')])]),t._v(" "),s("h2",{attrs:{id:"第9章-innodb的表空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第9章-innodb的表空间"}},[t._v("#")]),t._v(" 第9章 InnoDB的表空间")]),t._v(" "),s("h2",{attrs:{id:"第10章-单表访问方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第10章-单表访问方式"}},[t._v("#")]),t._v(" 第10章 单表访问方式")]),t._v(" "),s("h2",{attrs:{id:"第11章-连接的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第11章-连接的原理"}},[t._v("#")]),t._v(" 第11章 连接的原理")]),t._v(" "),s("p",[t._v("​\t从本质上说，连接就是将多个表的数据查询出来依次匹配，组成一个结果集返回。如果没有过滤条件，产生的结果集那么就是笛卡尔积。")]),t._v(" "),s("p",[t._v("​\tMySQL中分为内连接和外连接，内连接也就是取匹配中的交集，外连接就是，被驱动表中有没有数据匹配与驱动表匹配，都保留驱动表中的数据，内连接则不保存。")]),t._v(" "),s("p",[t._v("​\t嵌套循环连接算法是值驱动表只访问一次，对于每一条驱动表中的数据，都会访问一次被驱动表。因此设计了Join Buffer（连接缓冲区）存放于内存，把驱动表中查询出来的数据放到缓冲区中，然后对于查询被驱动表中的每一条数据，都与缓冲区中的数据进行匹配。这样，就假如缓冲区足够大，那么只需访问一次被驱动表。")]),t._v(" "),s("h2",{attrs:{id:"第12章-基于成本的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第12章-基于成本的优化"}},[t._v("#")]),t._v(" 第12章 基于成本的优化")]),t._v(" "),s("h3",{attrs:{id:"成本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成本"}},[t._v("#")]),t._v(" 成本")]),t._v(" "),s("ul",[s("li",[t._v("I/O成本：当查询表中的记录时，需要把数据或者索引加载到内存中，然后再进行操作。这个从磁盘到内存的加载过程损耗的时间成为I/O成本。")]),t._v(" "),s("li",[t._v("CPU成本：读取记录以及检测记录是否满足对应的搜索条件、对结果集进行排序等这些操作损耗的时间称为CPU成本。")])]),t._v(" "),s("p",[t._v("对于InnoDB存储引擎来说，读取一个页面花费的成本默认是1.0；读取以及检测一条记录是否符合搜索条件的成本默认是0.2。")]),t._v(" "),s("h3",{attrs:{id:"基于成本的优化步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于成本的优化步骤"}},[t._v("#")]),t._v(" 基于成本的优化步骤")]),t._v(" "),s("ol",[s("li",[t._v("根据搜索条件，找出所有可能使用的索引")]),t._v(" "),s("li",[t._v("计算全表扫描的代价")]),t._v(" "),s("li",[t._v("计算使用不同索引执行查询的代价")]),t._v(" "),s("li",[t._v("对比各种执行方案的代价，找出成本最低的那个方案")])]),t._v(" "),s("h3",{attrs:{id:"基于索引统计数据的成本计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于索引统计数据的成本计算"}},[t._v("#")]),t._v(" 基于索引统计数据的成本计算")]),t._v(" "),s("p",[t._v("每张表都有一个对应的统计表，来记录这张表的信息。比如有个索引统计数据，index statistics，"),s("code",[t._v("show index from 表名")]),t._v("，统计索引列中的各种信息，有一个比较重要的信息，"),s("code",[t._v("Cardinality")]),t._v("，表示该列中不重复值的数量。根据这个属性，可以计算出在某一列中一个值平均出现了多少次，大约重复次数等于函数初一"),s("code",[t._v("Cardinality")]),t._v("值。")]),t._v(" "),s("h3",{attrs:{id:"连接查询的成本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接查询的成本"}},[t._v("#")]),t._v(" 连接查询的成本")]),t._v(" "),s("h4",{attrs:{id:"条件过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件过滤"}},[t._v("#")]),t._v(" 条件过滤")]),t._v(" "),s("p",[t._v("因为在连接查询中，驱动表会被访问一次，被驱动表可能会被访问多次。所以，对于两表连接查询来说，它的查询成本由两部分构成：")]),t._v(" "),s("ul",[s("li",[t._v("单词查询驱动表的成本")]),t._v(" "),s("li",[t._v("多次查询被驱动表的成本")])]),t._v(" "),s("p",[t._v("驱动表的记录条数成为扇出（fanout），然后呢，就要计算扇出值。")]),t._v(" "),s("p",[t._v("对于那些条件中没有使用的索引列的数据，完全靠猜测来计算符合条件的记录条数，对于有索引列，那么通过"),s("code",[t._v("Cardinality")]),t._v("来猜测条数。")]),t._v(" "),s("h4",{attrs:{id:"两表连接的成本分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两表连接的成本分析"}},[t._v("#")]),t._v(" 两表连接的成本分析")]),t._v(" "),s("p",[t._v("连接查询的总成本=单词访问驱动表的成本 + 驱动表的扇出值*单词访问被驱动表的成本")]),t._v(" "),s("p",[t._v("所以也需要考虑最优的表连接顺序，优化的重点就是后面那个大头：")]),t._v(" "),s("ul",[s("li",[t._v("尽量减少驱动表的扇出值")]),t._v(" "),s("li",[t._v("访问被驱动表的成本要尽量底")])]),t._v(" "),s("h4",{attrs:{id:"多表连接的成本分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表连接的成本分析"}},[t._v("#")]),t._v(" 多表连接的成本分析")]),t._v(" "),s("p",[t._v("n张表的连接方式就有n!种连接方式，通过一些启发式规则来分析多表连接的成本，比如")]),t._v(" "),s("ul",[s("li",[t._v("提前结束某种连接顺序的成本评估")]),t._v(" "),s("li",[t._v("防止无穷无尽地分析各种连接顺序的成本，只分析小于一定的连接表数量")])]),t._v(" "),s("h3",{attrs:{id:"调节成本常数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调节成本常数"}},[t._v("#")]),t._v(" 调节成本常数")]),t._v(" "),s("p",[t._v("有两张表，"),s("code",[t._v("engine_cost")]),t._v("，"),s("code",[t._v("server_cost")])]),t._v(" "),s("p",[t._v("在server层进行连接管理、查询缓存、语法解析、查询优化等操作；")]),t._v(" "),s("p",[t._v("在存储引擎层执行具体的数据存取操作。")]),t._v(" "),s("h2",{attrs:{id:"第13章-innodb统计数据是如何收集的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第13章-innodb统计数据是如何收集的"}},[t._v("#")]),t._v(" 第13章 InnoDB统计数据是如何收集的")]),t._v(" "),s("h2",{attrs:{id:"第14章-基于规则的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第14章-基于规则的优化"}},[t._v("#")]),t._v(" 第14章 基于规则的优化")]),t._v(" "),s("h3",{attrs:{id:"一些简单的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些简单的优化"}},[t._v("#")]),t._v(" 一些简单的优化")]),t._v(" "),s("ul",[s("li",[t._v("移除不必要的括号")]),t._v(" "),s("li",[t._v("常量传递")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("等值传递")])]),t._v(" "),s("li",[s("p",[t._v("移除没用的条件")])]),t._v(" "),s("li",[s("p",[t._v("表达式计算")])]),t._v(" "),s("li",[s("p",[t._v("HAVING字句和WHERE字句的合并，如果没用出现SUM、MAC等聚集函数以及GROUP BY字句，优化器就把HAVING字句和WHERE字句合并")])])]),t._v(" "),s("h3",{attrs:{id:"常量表检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量表检测"}},[t._v("#")]),t._v(" 常量表检测")]),t._v(" "),s("p",[t._v("这两种查询话费的时间特别少")]),t._v(" "),s("ul",[s("li",[t._v("查询的表中一条记录没有，或者只有一条记录（根据统计信息（但不准确））")]),t._v(" "),s("li",[t._v("使用主键等值匹配或者唯一二级索引列等值匹配")])]),t._v(" "),s("h3",{attrs:{id:"外连接消除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外连接消除"}},[t._v("#")]),t._v(" 外连接消除")]),t._v(" "),s("p",[t._v("在被驱动表中没有找到符合条件的记录，就会加入一条NULL值的记录到结果集中。如果在where条件中拒绝空值，这时候的查询结果是等价于内连接的，那么就可以将外连接转换为内连接。")]),t._v(" "),s("p",[t._v("转为内连接的好处是，优化器可以评估不同连接顺序的成本，进而选出成本最低的那种连接顺序进行查询。")]),t._v(" "),s("h3",{attrs:{id:"子查询mysql执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子查询mysql执行过程"}},[t._v("#")]),t._v(" 子查询MySQL执行过程")]),t._v(" "),s("h4",{attrs:{id:"不相关标量子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不相关标量子查询"}},[t._v("#")]),t._v(" 不相关标量子查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" common_field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("先单独执行子查询"),s("code",[t._v("SELECT common_field FROM s2 WHERE key3 = 'a' LIMIT 1")])]),t._v(" "),s("li",[t._v("将上一步子查询的结果作为外层循环的条件")])]),t._v(" "),s("h4",{attrs:{id:"相关标量子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关标量子查询"}},[t._v("#")]),t._v(" 相关标量子查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" \n    key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" common_field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("从外循环取出一条记录")]),t._v(" "),s("li",[t._v("获取上一步的记录所需的列，然后执行子查询")]),t._v(" "),s("li",[t._v("如果符合条件，查出子查询的结果")]),t._v(" "),s("li",[t._v("再将子查询的结果拼接到外层查询的WHERE子句中")])]),t._v(" "),s("h4",{attrs:{id:"in子查询的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in子查询的优化"}},[t._v("#")]),t._v(" IN子查询的优化")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" common_field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("将IN后面的子查询结果，写入到一个临时表中（物化表）"),s("code",[t._v("materialized_table")])]),t._v(" "),s("p",[t._v("那么就相当于有两张表，就有一下两种考虑")]),t._v(" "),s("ul",[s("li",[t._v("从原表"),s("code",[t._v("s1")]),t._v("的角度看待，先获取s1表中的一条记录，然后判断这条记录是否存在于物化表中。")]),t._v(" "),s("li",[t._v("从物化表看待，先获取物化表中的值，然后判断s1表中是否有这个值的记录。")])]),t._v(" "),s("p",[t._v("也就是说，可以相当于是一个内连接，等价于")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" materialized_table "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m_val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("是内连接，那么优化器就会评估它们的连接顺序。")]),t._v(" "),s("h4",{attrs:{id:"将子查询转换为semi-join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将子查询转换为semi-join"}},[t._v("#")]),t._v(" 将子查询转换为semi-join")]),t._v(" "),s("p",[s("strong",[t._v("直接将子查询转换为连接。")])]),t._v(" "),s("p",[t._v("对于这样一个查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" common_field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("尝试将其转换为连接")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" s2 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("common_field \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这个查询的结果集是s1的记录，如果对于表s1的某条记录来说，s2表中有多条"),s("code",[t._v("s1.key1=s2.common_field")]),t._v("，那么s1的这条记录会加入多次到结果集中，这一种情况与原来的查询等价，原来的查询只关心是否存在记录满足"),s("code",[t._v("s1.key1=s2.common_field")]),t._v("二不关心具体有多少条记录与之匹配。")]),t._v(" "),s("p",[s("strong",[t._v("半连接")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Table pullout（子查询中的表上拉）")]),t._v(" "),s("p",[t._v("当子查询的查询列表是只有主键或者唯一索引列时")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" key2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以转换为")]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" s2 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key2 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("因为唯一索引或主键不存在有多条记录与之匹配")])]),t._v(" "),s("li",[s("p",[t._v("DuplicateWeedout execution strategy （重复值消除）")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s1 \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" common_field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以创建一个临时表")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" tmp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这样，如果要将s1的某条记录加入到结果集中，那先将该条记录的id插入到临时表中，如果插入成功，那可以将该条记录加入到结果集。")])])]),t._v(" "),s("p",[s("strong",[t._v("半连接适用条件")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" outer_tables \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" inner_tables "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("如果"),s("code",[t._v("IN")]),t._v("子查询不符合转换为"),s("code",[t._v("semi-join")]),t._v("的条件，那么查询优化器再二选一")]),t._v(" "),s("ul",[s("li",[t._v("先将子查询物化之后再执行查询")]),t._v(" "),s("li",[t._v("执行"),s("code",[t._v("IN to EXISTS")]),t._v("转换")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("IN to EXISTS")]),t._v("转换")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("outer_expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" inner_expr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" subquery_where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("转换为")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" inner_expr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" subquery_where "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" outer_expr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("inner_expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("转换为"),s("code",[t._v("EXISTS")]),t._v("的好处是，子查询可能可以用上索引")]),t._v(" "),s("p",[t._v("看到这里脑子嗡嗡的~")]),t._v(" "),s("h2",{attrs:{id:"第15章-explain详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第15章-explain详解"}},[t._v("#")]),t._v(" 第15章 EXPLAIN详解")]),t._v(" "),s("p",[t._v("一条查询语句在经过MySQL的查询优化器后，会基于成本或规则进行优化，可以通"),s("code",[t._v("EXPLAIN")]),t._v("来查看具体的执行计划。")]),t._v(" "),s("h3",{attrs:{id:"执行输出中各列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行输出中各列"}},[t._v("#")]),t._v(" 执行输出中各列")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SIMPLE      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" row "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" table")]),t._v(" "),s("p",[t._v("无论查询语句中包含多少个表，最终都会对每个表进行单表查询")]),t._v(" "),s("h4",{attrs:{id:"id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" id")]),t._v(" "),s("p",[t._v("一个大的查询可以拆分成多个"),s("code",[t._v("SELECT")]),t._v("，每一个"),s("code",[t._v("SELECT")]),t._v("对应一个id。")]),t._v(" "),s("p",[t._v("对于连接查询因为是同一个"),s("code",[t._v("SELECT")]),t._v("子句，所以查询的两个表是同一个id值。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM s1 INNER JOIN s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+---------------------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra                                 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+---------------------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SIMPLE      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL                                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SIMPLE      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s2    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9954")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Block Nested Loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+---------------------------------------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("对于联合查询或者子查询，则会分配多个唯一id值。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM s1 WHERE key1 IN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SELECT key1 FROM s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OR key3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PRIMARY     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key3      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using where "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SUBQUERY    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s2    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("303")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9954")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.02")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"select-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-type"}},[t._v("#")]),t._v(" select_type")]),t._v(" "),s("p",[t._v("一个大的"),s("code",[t._v("SELECT")]),t._v("可以拆分成多个小"),s("code",[t._v("SELECT")]),t._v("，对每一个`SELECT分配角色。")]),t._v(" "),s("ul",[s("li",[t._v("SIMPLE")])]),t._v(" "),s("p",[t._v("不包含"),s("code",[t._v("UNION")]),t._v("或者子查询的查询都算作"),s("code",[t._v("SIMPLE")]),t._v("类型")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SIMPLE      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" row "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("PRIVATE")])]),t._v(" "),s("p",[t._v("包含"),s("code",[t._v("UNION")]),t._v("，或者子查询的查询，其中最左边的表就是"),s("code",[t._v("PRIVATE")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM s1 UNION SELECT * FROM s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+--------------+------------+------------+------+---------------+------+---------+------+------+----------+-----------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+--------------+------------+------------+------+---------------+------+---------+------+------+----------+-----------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PRIMARY      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" UNION        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s2         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9954")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" UNION RESULT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("union1,"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using temporary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+--------------+------------+------------+------+---------------+------+---------+------+------+----------+-----------------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("UNION")])]),t._v(" "),s("p",[t._v("上边，除了最左边的s1，其它都是"),s("code",[t._v("UNION")])]),t._v(" "),s("ul",[s("li",[t._v("UNION RESULT")])]),t._v(" "),s("p",[t._v("上边，需要将两个查询的结果集合并，这里就是存放到一个临时表中，并去重。")]),t._v(" "),s("ul",[s("li",[t._v("SUBQUERY")])]),t._v(" "),s("p",[t._v("包含子查询的查询，不能转为对应的"),s("code",[t._v("semi-join")]),t._v("，并且是不相关子查询")]),t._v(" "),s("ul",[s("li",[t._v("DEPENDENT SUBQUERY")])]),t._v(" "),s("p",[t._v("相关子查询")]),t._v(" "),s("ul",[s("li",[t._v("DEPENDENT UNION")]),t._v(" "),s("li",[t._v("DERIVED")])]),t._v(" "),s("p",[t._v("派生表")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SELECT key1, count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" as c FROM s1 GROUP BY key1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" AS derived_s1 where c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+-------------+------------+------------+-------+---------------+----------+---------+------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+------------+------------+-------+---------------+----------+---------+------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PRIMARY     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("derived"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33.33")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using where "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" DERIVED     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("303")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+-------------+------------+------------+-------+---------------+----------+---------+------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("MATERIALIZED")])]),t._v(" "),s("p",[t._v("物化表")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" EXPLAIN SELECT * FROM s1 WHERE key1 IN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SELECT key1 FROM s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+----+--------------+-------------+------------+--------+---------------+------------+---------+-------------------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" select_type  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" table       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" partitions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" possible_keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" key_len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ref               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" filtered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+--------------+-------------+------------+--------+---------------+------------+---------+-------------------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SIMPLE       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s1          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ALL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL              "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9688")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using where "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SIMPLE       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subquery"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" eq_ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("auto_key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("auto_key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("303")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" xiaohaizi.s1.key1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MATERIALIZED "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" s2          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" index  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" idx_key1   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("303")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NULL              "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9954")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Using index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----+--------------+-------------+------------+--------+---------------+------------+---------+-------------------+------+----------+-------------+\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" rows "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" set, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("type")]),t._v(" "),s("th",[t._v("类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("system")]),t._v(" "),s("td",[t._v("对于统计精确的引擎，表中仅含一条记录")])]),t._v(" "),s("tr",[s("td",[t._v("const")]),t._v(" "),s("td",[t._v("单表访问，主键或者唯一二级索引列与等值匹配")])]),t._v(" "),s("tr",[s("td",[t._v("eq_ref")]),t._v(" "),s("td",[t._v("连接查询，被驱动表通过主键或者唯一二级索引列与等值匹配")])]),t._v(" "),s("tr",[s("td",[t._v("ref")]),t._v(" "),s("td",[t._v("普通的二级索引列与等值匹配")])]),t._v(" "),s("tr",[s("td",[t._v("fulltext")]),t._v(" "),s("td",[t._v("全文索引")])]),t._v(" "),s("tr",[s("td",[t._v("ref_or_null")]),t._v(" "),s("td",[t._v("普通的二级索引列与等值匹配，包含NULL")])]),t._v(" "),s("tr",[s("td",[t._v("index_merge")]),t._v(" "),s("td",[t._v("索引合并")])]),t._v(" "),s("tr",[s("td",[t._v("unique_subquery")]),t._v(" "),s("td",[t._v("连接查询，被驱动表使用eq_ref")])]),t._v(" "),s("tr",[s("td",[t._v("index_subquery")]),t._v(" "),s("td",[t._v("连接查询，被驱动表使用ref")])]),t._v(" "),s("tr",[s("td",[t._v("range")]),t._v(" "),s("td",[t._v("使用索引获取某些范围区间")])]),t._v(" "),s("tr",[s("td",[t._v("index")]),t._v(" "),s("td",[t._v("需要扫描索引上的所有数据")])]),t._v(" "),s("tr",[s("td",[t._v("ALL")]),t._v(" "),s("td",[t._v("全表扫描")])])])]),t._v(" "),s("h4",{attrs:{id:"possible-keys和key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#possible-keys和key"}},[t._v("#")]),t._v(" possible_keys和key")]),t._v(" "),s("p",[t._v("可能使用到的索引，和实际用到的索引")]),t._v(" "),s("h4",{attrs:{id:"key-len"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-len"}},[t._v("#")]),t._v(" key_len")]),t._v(" "),s("h4",{attrs:{id:"ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref")]),t._v(" "),s("p",[t._v("使用索引列等值匹配去执行查询时，展示与什么进行等值匹配，与某个常数const，某一列，某个函数。")]),t._v(" "),s("h4",{attrs:{id:"rows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rows"}},[t._v("#")]),t._v(" rows")]),t._v(" "),s("p",[t._v("预计需要扫描的行数")]),t._v(" "),s("h4",{attrs:{id:"filtered"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filtered"}},[t._v("#")]),t._v(" filtered")]),t._v(" "),s("p",[t._v("过滤条件后，还剩多少记录，1~100%。")]),t._v(" "),s("p",[s("strong",[t._v("未完待续。。。")])]),t._v(" "),s("h2",{attrs:{id:"第16章-optimizer-trace的神奇功效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第16章-optimizer-trace的神奇功效"}},[t._v("#")]),t._v(" 第16章 optimizer trace的神奇功效")]),t._v(" "),s("h2",{attrs:{id:"第17章-innodb的buffer-pool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第17章-innodb的buffer-pool"}},[t._v("#")]),t._v(" 第17章 InnoDB的Buffer Pool")]),t._v(" "),s("p",[t._v("磁盘太慢，用内存作为缓存，不至于每次都访问磁盘。")]),t._v(" "),s("p",[t._v("Buffer Poll是向操作系统申请的连续内存，一个个的chunk组成，每个chunk由"),s("code",[t._v("控制块")]),t._v("和"),s("code",[t._v("缓存页")]),t._v("组成，控制块那肯定就是存放一些缓存页的信息，上一页，下一页，锁啥的。")]),t._v(" "),s("p",[t._v("那在内存中弄了一个这样的玩意，那肯定就有这些问题")]),t._v(" "),s("p",[t._v("咋知道缓存中是否加载了某一页，使用"),s("code",[t._v("表空间号 + 页号")]),t._v("作为"),s("code",[t._v("key")]),t._v("，缓存页作为"),s("code",[t._v("value")]),t._v("，建立哈希表。")]),t._v(" "),s("p",[t._v("缓存中修改了页（"),s("code",[t._v("脏页")]),t._v("），加入到flush链表，等待时机刷入磁盘。")]),t._v(" "),s("p",[t._v("Buffer Poll满了怎么办，采用LRU链表，LRU链表分为young区和old区，新加入的数据，放到LRU的old头，在间隔一定时间外访问，就会吧他送到young头。没有足够的空闲缓存页，首先淘汰old中的页。")]),t._v(" "),s("p",[t._v("少于1G缓存数据，不建议搞多个Buffer Poll。")]),t._v(" "),s("h2",{attrs:{id:"第18章-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第18章-事务"}},[t._v("#")]),t._v(" 第18章 事务")]),t._v(" "),s("p",[t._v("ACID，原子性，一致性，隔离性，持久性")]),t._v(" "),s("h2",{attrs:{id:"第19章-redo日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第19章-redo日志"}},[t._v("#")]),t._v(" 第19章 redo日志")]),t._v(" "),s("h2",{attrs:{id:"第20章-undo日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第20章-undo日志"}},[t._v("#")]),t._v(" 第20章 undo日志")]),t._v(" "),s("h2",{attrs:{id:"第21章-事务隔离级别和mvcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第21章-事务隔离级别和mvcc"}},[t._v("#")]),t._v(" 第21章 事务隔离级别和MVCC")]),t._v(" "),s("h2",{attrs:{id:"第22章-锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第22章-锁"}},[t._v("#")]),t._v(" 第22章 锁")])])}),[],!1,null,null,null);s.default=e.exports}}]);