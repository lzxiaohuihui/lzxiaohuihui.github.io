(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{366:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"单例bean是线程安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单例bean是线程安全"}},[t._v("#")]),t._v(" 单例Bean是线程安全")]),t._v(" "),a("p",[t._v("Bean单例还是多例可以通过"),a("code",[t._v("@Scope")]),t._v("指定")]),t._v(" "),a("p",[a("code",[t._v("singleton")]),t._v(": bean在每个Spring IOC容器中只有一个实例；")]),t._v(" "),a("p",[a("code",[t._v("prototype")]),t._v("：一个bean定义可以有多个实例。")]),t._v(" "),a("p",[t._v("Spring 框架默认使用的单例Bean模式，不是线程安全的。但是一般Spring 中的bean都是无状态的对象，没有线程安全的问题。如果bean中定义了可修改的成员变量，是要考虑线程安全问题的。")]),t._v(" "),a("h2",{attrs:{id:"aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" AOP")]),t._v(" "),a("p",[t._v("面向切面编程，一般用于将那些与业务无关的代码，公共的，将其抽取出来作为一个模块，这一个模块称为切面，可以将其嵌入到需要的地方。")]),t._v(" "),a("ul",[a("li",[t._v("记录操作日志")]),t._v(" "),a("li",[t._v("缓存处理")]),t._v(" "),a("li",[t._v("Spring 中内置的事务处理")])]),t._v(" "),a("p",[t._v("记录日志，定义切点（监控的范围，方法），对切点定义行为，使用前置通知方式方式，预先拦截一下方法的参数，获取需要记录的部分，然后保存到数据库。")]),t._v(" "),a("p",[a("code",[t._v("@Transaction")]),t._v(" 声明式事物，使用AOP将"),a("strong",[t._v("事务处理")]),t._v("的功能编织到拦截的方法中")]),t._v(" "),a("h2",{attrs:{id:"事务失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务失效"}},[t._v("#")]),t._v(" 事务失效")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("异常捕获处理")]),t._v(" "),a("p",[t._v("在try中出现异常，并在catch中处理了异常，就事务失效了。需要在catch中throw new RuntimeException(e)。")])]),t._v(" "),a("li",[a("p",[t._v("抛出检查异常")]),t._v(" "),a("p",[t._v("如果出现异常，只会回滚非检查异常。可以配置rollbackFor = Excetion.class，所有异常都回滚。")])]),t._v(" "),a("li",[a("p",[t._v("非public方法")]),t._v(" "),a("p",[t._v("spring为该方法创建代理，需要该方法是public的。")])])]),t._v(" "),a("h2",{attrs:{id:"spring-bean的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean的生命周期"}},[t._v("#")]),t._v(" Spring bean的生命周期")]),t._v(" "),a("p",[t._v("Spring在容器初始化过程中，会将xml配置的"),a("code",[t._v("<bean>")]),t._v("的信息封装成一个BeanDefinition对象，Spring根据BeanDefinition创建Bean对象，BeanDefinition有很多属性来描述Bean。")]),t._v(" "),a("ul",[a("li",[t._v("beanClassName")]),t._v(" "),a("li",[t._v("initMethodName")]),t._v(" "),a("li",[t._v("properryValues")]),t._v(" "),a("li",[t._v("scope")]),t._v(" "),a("li",[t._v("lazyInit")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604102732846.png",alt:"image-20230604102732846"}})]),t._v(" "),a("h2",{attrs:{id:"循环依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环依赖"}},[t._v("#")]),t._v(" 循环依赖")]),t._v(" "),a("p",[t._v("一级缓存，单利池，存放已经初始化完成的bean对象")]),t._v(" "),a("p",[t._v("二级缓存，缓存声明周期还没进行完的bean对象")]),t._v(" "),a("p",[t._v("三级缓存，缓存的是，ObjectFactory对象工厂，用来创建对象。")]),t._v(" "),a("p",[a("strong",[t._v("二级缓存解决循环依赖")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604105754109.png",alt:"image-20230604105754109"}})]),t._v(" "),a("p",[a("strong",[t._v("三级缓存解决循环依赖")])]),t._v(" "),a("p",[t._v("A依赖B，B依赖A的代理对象")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604105825086.png",alt:"image-20230604105825086"}})]),t._v(" "),a("h2",{attrs:{id:"构造方法循环依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造方法循环依赖"}},[t._v("#")]),t._v(" 构造方法循环依赖")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Lazy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A的构造方法执行了..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"spring-mvc执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc执行流程"}},[t._v("#")]),t._v(" Spring MVC执行流程")]),t._v(" "),a("ul",[a("li",[t._v("视图JSP")]),t._v(" "),a("li",[t._v("前后端分离")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604110304090.png",alt:"image-20230604110304090"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604110648608.png",alt:"image-20230604110648608"}})]),t._v(" "),a("h2",{attrs:{id:"spring-boot自动配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot自动配置"}},[t._v("#")]),t._v(" Spring Boot自动配置")]),t._v(" "),a("p",[a("code",[t._v("@SpringBootApplication")]),t._v("注解中有以下三个注解")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("@SpringBootConfiguration")])]),t._v(" "),a("p",[t._v("配置类，与Configuration相同")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("@EnableAutoConfiguration")])]),t._v(" "),a("p",[t._v("实现自动配置")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("@ComponentScan")])]),t._v(" "),a("p",[t._v("组件扫描")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604111428751.png",alt:"image-20230604111428751"}})]),t._v(" "),a("h2",{attrs:{id:"spring-常见注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-常见注解"}},[t._v("#")]),t._v(" Spring 常见注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Component、@Controller、@Service、@Repository")]),t._v(" "),a("td",[t._v("使用在类上用于实例化Bean")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Autowired")]),t._v(" "),a("td",[t._v("使用在字段上用于根据类型依赖注入")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Qualifier")]),t._v(" "),a("td",[t._v("结合@Autowired一起使用用于根据名称进行依赖注入")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Scope")]),t._v(" "),a("td",[t._v("标注Bean的作用范围")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Configuration")]),t._v(" "),a("td",[t._v("指定当前类是一个 Spring 配置类，当创建容器时会从该类上加载注解")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@ComponentScan")]),t._v(" "),a("td",[t._v("用于指定 Spring  在初始化容器时要扫描的包")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Bean")]),t._v(" "),a("td",[t._v("使用在方法上，标注将该方法的返回值存储到Spring容器中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Import")]),t._v(" "),a("td",[t._v("使用@Import导入的类会被Spring加载到IOC容器中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Aspect、@Before、@After、@Around、@Pointcut")]),t._v(" "),a("td",[t._v("用于切面编程（AOP）")])])])]),t._v(" "),a("h2",{attrs:{id:"spring-mvc注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc注解"}},[t._v("#")]),t._v(" Spring MVC注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("@RequestMapping")]),t._v(" "),a("th",[t._v("用于映射请求路径，可以定义在类上和方法上。用于类上，则表示类中的所有的方法都是以该地址作为父路径")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("@RequestBody")]),t._v(" "),a("td",[t._v("注解实现接收http请求的json数据，将json转换为java对象")])]),t._v(" "),a("tr",[a("td",[t._v("@RequestParam")]),t._v(" "),a("td",[t._v("指定请求参数的名称")])]),t._v(" "),a("tr",[a("td",[t._v("@PathViriable")]),t._v(" "),a("td",[t._v("从请求路径下中获取请求参数(/user/{id})，传递给方法的形式参数")])]),t._v(" "),a("tr",[a("td",[t._v("@ResponseBody")]),t._v(" "),a("td",[t._v("注解实现将controller方法返回对象转化为json对象响应给客户端")])]),t._v(" "),a("tr",[a("td",[t._v("@RequestHeader")]),t._v(" "),a("td",[t._v("获取指定的请求头数据")])]),t._v(" "),a("tr",[a("td",[t._v("@RestController")]),t._v(" "),a("td",[t._v("@Controller + @ResponseBody")])])])]),t._v(" "),a("h2",{attrs:{id:"mybatis执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis执行流程"}},[t._v("#")]),t._v(" Mybatis执行流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604112527374.png",alt:"image-20230604112527374"}})]),t._v(" "),a("h2",{attrs:{id:"延迟加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟加载"}},[t._v("#")]),t._v(" 延迟加载")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604113740513.png",alt:"image-20230604113740513"}})]),t._v(" "),a("p",[t._v("查询用户的时候，把用户中的订单信息也查询出来，这是"),a("strong",[t._v("立即加载")]),t._v("。")]),t._v(" "),a("p",[t._v("查询用户时，仅查询用户表信息，当访问orderList时，再查询订单表，这是"),a("strong",[t._v("延迟加载")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lzh-images.oss-cn-hangzhou.aliyuncs.com/images/image-20230604113905098.png",alt:"image-20230604113905098"}})]),t._v(" "),a("h2",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("ul",[a("li",[t._v("本地缓存，"),a("code",[t._v("PerppetualCache")]),t._v("，是基于HashMap实现的。\n"),a("ul",[a("li",[t._v("一级缓存：作用域是session级别")]),t._v(" "),a("li",[t._v("二级缓存：作用域是namespace和mapper的作用域，不依赖与session")])])])]),t._v(" "),a("p",[a("strong",[t._v("注意事项")])]),t._v(" "),a("ul",[a("li",[t._v("当缓存的数据更新了，该作用域下所有select中的缓存将被clear")]),t._v(" "),a("li",[t._v("缓存的数据需要实现Serializable接口")]),t._v(" "),a("li",[t._v("只有会话提交后者关闭后，一级缓存中的数据才会转移到二级缓存中。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);